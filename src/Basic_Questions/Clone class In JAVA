✅ Day 54 Topic: clone() Method in Java
🔍 What is clone()?
The clone() method in Java is used to create an exact copy (a clone) of an object.

Defined in the Object class.

Used to perform a field-by-field copy.

Commonly used when we want to duplicate objects without sharing memory.

🧪 Basic Rules:
Concept	Description
Interface Needed	Class must implement Cloneable interface, else CloneNotSupportedException
Method Override	Override the clone() method (usually make it public)
Default Copy	Default is shallow copy — deep copy must be handled manually

✅ Example Program:
class Student implements Cloneable {
    int id;
    String name;

    Student(int id, String name) {
        this.id = id;
        this.name = name;
    }

    // 🔹 Override clone method
    public Object clone() throws CloneNotSupportedException {
        return super.clone(); // calls Object's clone
    }
}

public class CloneDemo {
    public static void main(String[] args) throws CloneNotSupportedException {
        Student s1 = new Student(101, "Rohan");
        Student s2 = (Student) s1.clone(); // 🔁 Cloning

        System.out.println("Original: " + s1.id + " " + s1.name);
        System.out.println("Cloned  : " + s2.id + " " + s2.name);

        System.out.println("Are they same object? " + (s1 == s2)); // false
    }
}
📌 Output:
Original: 101 Rohan
Cloned  : 101 Rohan
Are they same object? false


⚠️ Note:
clone() does shallow copy by default (only field references copied).
If class contains mutable fields (e.g., arrays or objects), you need to manually handle deep cloning.

🧠 Hinglish Explanation:
Java mein clone() method se hum ek object ki copy bana sakte hain.
Lekin Cloneable interface implement karna must hai — warna exception aayega.
By default, ye shallow copy karta hai — deep copy ke liye extra logic likhna padta hai.